steps:
  - id: Build
    name: gcr.io/cloud-builders/docker
    # run under bash so we can refer to the secret env var
    entrypoint: bash
    # make the SENTRY_AUTH_TOKEN from Secret Manager available
    secretEnv:
      - SENTRY_AUTH_TOKEN
    args:
      # -c means “the rest is a shell command”
      - -c
      - |
        docker build --no-cache \
          --build-arg SENTRY_AUTH_TOKEN=$$SENTRY_AUTH_TOKEN \
          --build-arg COMMIT_SHA=$COMMIT_SHA \
          -t $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA \
          . -f Dockerfile

  - id: Push
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA

  - id: Deploy
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: gcloud
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - --platform=managed
      - --image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - --region=$_DEPLOY_REGION
      - --quiet

images:
  - $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA

options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

substitutions:
  _AR_HOSTNAME: us-central1-docker.pkg.dev
  _TRIGGER_ID: ff9811e5-0a32-4124-851a-dd5875b3c26a
  _PLATFORM: managed
  _SERVICE_NAME: auth-hosting
  _DEPLOY_REGION: us-central1

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - auth-hosting

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/sentyAuthToken/versions/latest
      env: SENTRY_AUTH_TOKEN
